import pandas as pd
import re

# Load the metadata from the CSV file generated by gfotos.py
csv_file = "photo_metadata.csv"  # File name

def clean_timestamp(timestamp):
    """
    Clean and validate timestamp strings.
    Ensures format: YYYY:MM:DD HH:MM:SS
    """
    try:
        # Check for valid format using regex
        if re.match(r'\d{4}:\d{2}:\d{2} \d{2}:\d{2}:\d{2}', timestamp):
            return timestamp
    except:
        pass
    return None

try:
    # Read the data into a DataFrame
    df = pd.read_csv(csv_file)

    # Ensure the Timestamp column is clean and in datetime format
    if 'Timestamp' in df.columns:
        # Clean timestamps
        df['Timestamp'] = df['Timestamp'].apply(lambda x: clean_timestamp(str(x)))
        
        # Drop rows with invalid timestamps
        df = df.dropna(subset=['Timestamp'])

        # Parse cleaned timestamps into datetime objects
        df['Timestamp'] = pd.to_datetime(df['Timestamp'], format='%Y:%m:%d %H:%M:%S', errors='coerce')

        # Drop rows where parsing failed
        df = df.dropna(subset=['Timestamp'])
    else:
        raise ValueError("Timestamp column not found in the CSV file.")

    # Extract useful information
    df['Hour'] = df['Timestamp'].dt.hour         # Extract the hour
    df['Day'] = df['Timestamp'].dt.day_name()    # Extract the day of the week
    df['Month'] = df['Timestamp'].dt.month_name()  # Extract the month name
    df['Year'] = df['Timestamp'].dt.year         # Extract the year

    # Add a Year-Month column for trend analysis
    df['YearMonth'] = df['Timestamp'].dt.to_period('M')

    # Print the analyzed data
    print("Analyzed Data:")
    print(df.head())  # Display the first few rows of the DataFrame

    print("\nSummary Statistics:")
    print(df.describe(include='all'))  # Include non-numeric stats

    print("\nPhoto Counts by Hour:")
    print(df['Hour'].value_counts())

    print("\nPhoto Counts by Day of the Week:")
    print(df['Day'].value_counts())

    print("\nPhoto Counts by Month:")
    print(df['Month'].value_counts())

    print("\nPhoto Counts by Year:")
    print(df['Year'].value_counts())

except FileNotFoundError:
    print(f"Error: {csv_file} not found. Please run gfotos.py to generate the file.")
except Exception as e:
    print(f"An error occurred: {e}")
