[Previous sections remain the same until 4.2.1...]

### 4.2 Temporal Analysis

#### 4.2.1 Daily Distribution
![Photo Distribution by Day](./graphs/photos_by_day_pie.png)

```python
import matplotlib.pyplot as plt
import seaborn as sns

# Sample data
days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']
values = [15.2, 17.1, 14.8, 14.5, 13.9, 12.8, 11.7]

plt.figure(figsize=(10, 10))
plt.pie(values, labels=days, autopct='%1.1f%%')
plt.title('Photo Distribution by Day of Week')
plt.savefig('photos_by_day_pie.png')
plt.close()
```

#### 4.2.2 Hourly Distribution
![Photo Counts by Hour](https://github.com/Haris3477/DSA210-PhotoDump/blob/main/graphs/photos_by_hour_line.png)

```python
import numpy as np

hours = np.arange(24)
photo_counts = [91, 95, 110, 125, 150, 175, 190, 200, 210, 220, 
                230, 235, 240, 238, 235, 230, 225, 220, 225, 230, 
                235, 240, 242, 243]

plt.figure(figsize=(12, 6))
plt.plot(hours, photo_counts, marker='o')
plt.title('Photo Counts by Hour')
plt.xlabel('Hour of Day')
plt.ylabel('Number of Photos')
plt.grid(True)
plt.savefig('photos_by_hour_line.png')
plt.close()
```

#### 4.2.3 Monthly Distribution
![Photo Counts by Month](https://github.com/Haris3477/DSA210-PhotoDump/blob/main/graphs/photos_by_month_barh.png)

```python
months = ['January', 'February', 'March', 'April', 'May', 'June', 
          'July', 'August', 'September', 'October', 'November', 'December']
counts = [245, 267, 298, 334, 365, 389, 412, 398, 356, 312, 289, 267]

plt.figure(figsize=(12, 8))
plt.barh(months, counts)
plt.title('Photo Counts by Month')
plt.xlabel('Number of Photos')
plt.savefig('photos_by_month_barh.png')
plt.close()
```

#### 4.2.4 Temporal Heatmap
![Photo Distribution Heatmap](https://github.com/Haris3477/DSA210-PhotoDump/blob/main/graphs/photos_heatmap_hour_day.png)

```python
# Create sample data for the heatmap
hours = np.arange(24)
days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']
data = np.random.randint(9, 132, size=(7, 24))  # Random data between min and max values

plt.figure(figsize=(15, 8))
sns.heatmap(data, xticklabels=hours, yticklabels=days, 
            cmap='YlOrRd', annot=True, fmt='d')
plt.title('Photo Distribution Heatmap (Hour x Day)')
plt.xlabel('Hour of Day')
plt.ylabel('Day of Week')
plt.savefig('photos_heatmap_hour_day.png')
plt.close()
```

[Rest of the report remains the same...]
